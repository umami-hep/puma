name: Test and publish
on: [push]
jobs:
  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    container: python:3.8-slim
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: pip install .
      - run: pip install pytest
      - run: pytest -v puma/tests/
  example_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    container: python:3.8-slim
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: pip install .
      - run: mkdir plots
      - run: cd plots
      - run: ls ../examples/*.py | xargs -n 1 -P 3 python
      - uses: actions/upload-artifact@v3
        with:
          name: plot-example-artifacts
          path: plots/*.png
  publish:
    name: Publish to PyPI
    # For now this is an independent job, but we should make this dependent on the
    # unit tests --> put at end of test pipeline and make it require all the previous
    # jobs
    # needs: [linter, pylint, darglint, black]
    needs: [unit_tests]
    # Only run for a tagged commit
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Build package
        run: |
          python -m pip install -U pip build
          python -m build
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          repository_url: https://upload.pypi.org/legacy/